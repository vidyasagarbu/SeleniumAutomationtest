<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-26T13:22:22 IST" name="Suite" finished-at="2023-05-26T13:22:34 IST" duration-ms="12229">
    <groups>
    </groups>
    <test started-at="2023-05-26T13:22:22 IST" name="Test" finished-at="2023-05-26T13:22:34 IST" duration-ms="12229">
      <class name="extentReportExample.ExtentReportsTestCase_Method1">
        <test-method is-config="true" signature="startReport()[pri:0, instance:extentReportExample.ExtentReportsTestCase_Method1@662b4c69]" started-at="2023-05-26T13:22:22 IST" name="startReport" finished-at="2023-05-26T13:22:22 IST" duration-ms="441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method is-config="true" signature="setup()[pri:0, instance:extentReportExample.ExtentReportsTestCase_Method1@662b4c69]" started-at="2023-05-26T13:22:22 IST" name="setup" finished-at="2023-05-26T13:22:29 IST" duration-ms="6248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLogo()[pri:0, instance:extentReportExample.ExtentReportsTestCase_Method1@662b4c69]" started-at="2023-05-26T13:22:29 IST" name="verifyLogo" finished-at="2023-05-26T13:22:29 IST" duration-ms="139" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertFalse(Assert.java:65)
at org.testng.Assert.assertFalse(Assert.java:75)
at extentReportExample.ExtentReportsTestCase_Method1.verifyLogo(ExtentReportsTestCase_Method1.java:131)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:extentReportExample.ExtentReportsTestCase_Method1@662b4c69]" started-at="2023-05-26T13:22:29 IST" name="getResult" finished-at="2023-05-26T13:22:30 IST" duration-ms="1033" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogo status=FAILURE method=ExtentReportsTestCase_Method1.verifyLogo()[pri:0, instance:extentReportExample.ExtentReportsTestCase_Method1@662b4c69] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="setup()[pri:0, instance:extentReportExample.ExtentReportsTestCase_Method1@662b4c69]" started-at="2023-05-26T13:22:30 IST" name="setup" finished-at="2023-05-26T13:22:33 IST" duration-ms="3426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyTitle()[pri:0, instance:extentReportExample.ExtentReportsTestCase_Method1@662b4c69]" started-at="2023-05-26T13:22:33 IST" name="verifyTitle" finished-at="2023-05-26T13:22:33 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:extentReportExample.ExtentReportsTestCase_Method1@662b4c69]" started-at="2023-05-26T13:22:33 IST" name="getResult" finished-at="2023-05-26T13:22:34 IST" duration-ms="296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTitle status=SUCCESS method=ExtentReportsTestCase_Method1.verifyTitle()[pri:0, instance:extentReportExample.ExtentReportsTestCase_Method1@662b4c69] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:extentReportExample.ExtentReportsTestCase_Method1@662b4c69]" started-at="2023-05-26T13:22:34 IST" name="endReport" finished-at="2023-05-26T13:22:34 IST" duration-ms="520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- extentReportExample.ExtentReportsTestCase_Method1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
